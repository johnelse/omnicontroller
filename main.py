#!/usr/bin/env python

from bottle import request, route, run, static_file, template
import sys

plugin_folder = "plugins"
plugin_names = [
    "banshee",
    "spotify"
    ]
controllers = {}

# Return the main page for the named controller.
@route('/controller/:name')
def send_controller(name):
    if controllers.has_key(name):
        controller = controllers[name]
        controls = controller.get_controls()
        return template('controller', name=name, controls=controls)
    else:
        return "Unknown controller"

# Return the autogenerated JS file for the named controller.
@route('/js/gen/:name')
def send_js(name):
    # Drop the .js
    name = name[:-3]
    if controllers.has_key(name):
        controller = controllers[name]
        controls = controller.get_controls()
        return template('js', name=name, controls=controls)

# Return static javascript.
@route('/js/static/:filename')
def send_static(filename):
    return static_file(filename, root='js/static')

# Respond to commands sent by the controller pages.
@route('/command')
def run_command():
    name = request.GET.get('name')
    command = request.GET.get('command')
    if controllers.has_key(name):
        controller = controllers[name]
        print "Sending command %s to controller %s." % (command, name)
        controller.send_command(command)

# Server initialisation.
def usage():
    print """
Usage:
    %s server_address server_port
""" % sys.argv[0]

def load_controllers():
    for name in plugin_names:
        import imp, os.path
        try:
            plugin = imp.load_source(name, os.path.join(plugin_folder, '%s.py' % name))
            controller = plugin.get_controller()
            controller.connect()
            controllers[name] = controller
            print 'Loaded plugin %s' % name
        except:
            print 'Failed to load plugin %s - %s' % (name, sys.exc_info()[1])

if __name__ == "__main__":
    try:
        server_address = sys.argv[1]
        server_port = int(sys.argv[2])
    except:
        usage()
        sys.exit(1)
    load_controllers()
    run(host=server_address, port=server_port)
